<?php
/**
 * Created by PhpStorm.
 * User: Duc
 * Date: 7/5/2021
 * Time: 11:28 PM
 */

namespace app\modules\base;

use app\modules\contrib\textextraction\Util;
use app\modules\danhmuc\models\DmPhuongxa;
use app\modules\danhmuc\models\DmQuanhuyen;
use Yii;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;
use app\modules\services\UtilityService;

class BaseModel extends ActiveRecord
{
    public static $STATUS = ['ACTIVE' => 1, 'INACTIVE' => 0, 'DRAFT' => 2];

    public static function createMultiple($modelClass, $multipleModels = [])
    {
        $model = new $modelClass;
        $formName = $model->formName();
        $post = \Yii::$app->request->post($formName);
        $models = [];

        if (!empty($multipleModels)) {
            $keys = array_keys(ArrayHelper::map($multipleModels, 'id', 'id'));
            $multipleModels = array_combine($keys, $multipleModels);
        }

        if ($post && is_array($post)) {
            foreach ($post as $i => $item) {
                if (isset($item['id']) && !empty($item['id']) && isset($multipleModels[$item['id']])) {
                    $models[] = $multipleModels[$item['id']];
                } else {
                    $models[] = new $modelClass;
                }
            }
        }

        unset($model, $formName, $post);

        return $models;
    }

    // public function afterSave($insert, $changedAttributes)
    // {
    //     if ($this->hasAttribute('geom') && $this->geom_geojson != null){
    //         $tableName = $this->tableName();
    //         \Yii::$app->db->createCommand("UPDATE $tableName SET geom = ST_AsText(ST_GeomFromGeoJSON('$this->geom_geojson')) WHERE id=:id")
    //             ->bindValue(':id', $this->id)
    //             ->execute();
    //         parent::afterSave($insert, $changedAttributes);
    //     }

    //     if ($this->hasAttribute('geom')){
    //         $tableName = $this->tableName();
    //         \Yii::$app->db->createCommand("UPDATE $tableName SET geom = ST_GeomFromText('POINT($this->long $this->lat)',4326) WHERE id=:id")
    //             ->bindValue(':id', $this->id)
    //             ->execute();
    //         parent::afterSave($insert, $changedAttributes);
    //     }
    // }

     //public function beforeValidate()
     //{        
//         foreach (array_keys($this->getAttributes()) as $attr){
//             if(!empty($this->$attr)){
//                 $this->$attr = html_entity_decode($this->$attr);
//                 $this->$attr = \yii\helpers\HtmlPurifier::process($this->$attr);
//             }
//         }
//         return parent::beforeValidate();// to keep parent validator available 
//     }

     public function beforeSave($insert)
     {
//         date_default_timezone_set('Asia/Ho_Chi_Minh');
        
//         $dateAttributes = ArrayHelper::index($this->getTableSchema()->columns, 'name', 'type');
//         if(isset($dateAttributes['date'])) {

//             foreach ($dateAttributes['date'] as $dateAttribute) {
//                 if($this[$dateAttribute->name] != null) {
//                     $this[$dateAttribute->name] = UtilityService::convertDateFromMaskedInput($this[$dateAttribute->name]);
//                 }
//             }
//         }

            $dateAttributes = ArrayHelper::index($this->getTableSchema()->columns, 'name', 'type');
            if(isset($dateAttributes['date'])) {

                foreach ($dateAttributes['date'] as $dateAttribute) {
                    $this[$dateAttribute->name] = UtilityService::convertDateFromMaskedInput($this[$dateAttribute->name]);
                }
            }

//         if($this->hasAttribute('diachi')) {
//             $sonha = isset($this->so_nha) ? $this->so_nha : '';
//             $tenduong = isset($this->ten_duong) ? $this->ten_duong : '';
//             $phuong = isset($this->phuongxa_id) ? DmPhuongxa::findOne($this->phuongxa_id)->ten : '';
// //            $quan = isset($this->quanhuyen_id) ? DmQuanhuyen::findOne($this->quanhuyen_id)->ten : '';
//             $quan = 'Quáº­n 11';

//             $this->diachi = implode(', ', [$sonha, $tenduong, $phuong, $quan]);
//             $this->diachi_khongdau = mb_strtolower(UtilityService::utf8convert(implode(' ', [$sonha, $tenduong, $phuong, $quan])));
//         }
        
        if ($this->isNewRecord) {
            $this->status = self::$STATUS['ACTIVE']; 
        }      

         return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        $dateAttributes = ArrayHelper::index($this->getTableSchema()->columns, 'name', 'type');
        if(isset($dateAttributes['date'])) {

            foreach ($dateAttributes['date'] as $dateAttribute) {
                $this[$dateAttribute->name] = UtilityService::convertDateFromDb($this[$dateAttribute->name]);
            }
        }
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
}